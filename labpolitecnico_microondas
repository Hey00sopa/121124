#include <Keypad.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2); //endereco, colunas, linhas

//Teclado matricial com display
//Aluno:Sophia Santos

char teclas[4][4] = { // Matriz de caracteres (mapeamento do teclado)
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte linhas[4] = {9, 8, 7, 6}; // Pinos de conexao com as linhas do teclado
byte colunas[4] = {5, 4, 3, 2}; // Pinos de conexao com as colunas do teclado
Keypad teclado = Keypad(makeKeymap(teclas), linhas, colunas, 4, 4);
int posicao = 0;
int contador;//vai decrementar o valor que se digitar 
unsigned long reloginho_tempo = 0;//conta o tempo
bool iniciar = false;//inicia a contagem
#define bip 12;


void setup()
{
  pinMode(bip, OUTPUT);//liga o autofalante
  tone(bip, 440, 100);
  lcd.init(); //inicia LCD
  lcd.backlight(); //ligar a luz de fundo do LCD
  lcd.clear(); //limpa o LCD
  lcd.setCursor(0, 0); //coluna 0 e linha 0
  lcd.print("Microondas:");
  lcd.setCursor(0, 1); //coluna 0 e linha 1
  lcd.print("00");
  // Serial.begin(9600); // Inicia porta serial
}

void loop()
{
  char leitura = teclado.getKey();
  if (leitura) {
    if (leitura == '*') {//l
      posicao== 0 ;
      contador = 0;
      lcd.setCursor(posicao, 1);
      lcd.print(" ");
    } else if (leitura == '#') {
        lcd.setCursor(0, 1);
        iniciar = !iniciar;
    } else {if(posicao <= 1){
      lcd.setCursor(posicao, 1);
    }
      lcd.print(leitura);
      if(posicao == 0){
        contador = (leitura - '0') * 10;
      } else{
        contador += leitura - '0';
      }
      contador = leitura-'0';//converte caractere para numero
      posicao++;
    }
  }

  if ((iniciar) && (millis()-reloginho_tempo >= 1000)){
    tempo = millis();
    contador--;
    lcd.setCursor(0,1);
    if(contador < 10){
      lcd.print("0");
    }
    lcd.print(contador);
    if(contador == o){
      for(int 3 = 1; i<=3; i++){
        tone(bip, 440, 100);
        delay(500);

      }

      iniciar = false;
    }
  }
  delay(100); // esperar por 500 milisegundos(s)
}
